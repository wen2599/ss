{"ast":null,"code":"const API_BASE_URL='https://wenxiuxiu.eu.org/api';// We need to handle credentials (cookies) for session management\nasync function request(endpoint){let method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'GET';let body=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;const url=`${API_BASE_URL}/api.php?endpoint=${endpoint}`;const options={method,headers:{'Content-Type':'application/json'},credentials:'include'// Important for sending session cookies\n};if(body){options.body=JSON.stringify(body);}try{const response=await fetch(url,options);// We can't always expect JSON, especially on errors.\nconst text=await response.text();try{return JSON.parse(text);}catch(e){// If parsing fails, it might be a server error page.\nconsole.error(\"Failed to parse JSON:\",text);return{success:false,message:\"Server returned non-JSON response.\"};}}catch(error){console.error(`API request failed to endpoint: ${endpoint}`,error);return{success:false,message:error.message};}}// --- Auth Endpoints ---\nexport const register=(phone,password)=>request('register','POST',{phone,password});export const login=(phone,password)=>request('login','POST',{phone,password});export const logout=()=>request('logout','POST');export const checkSession=()=>request('check_session');export const findUser=phone=>request(`find_user&phone=${phone}`);export const transferPoints=(recipientId,amount)=>request('transfer_points','POST',{recipientId,amount});// --- Game Endpoints ---\nexport const matchmake=game_mode=>request('matchmake','POST',{game_mode});export const getRoomState=(roomId,playerId)=>request(`get_room_state&roomId=${roomId}&playerId=${playerId}`);export const startGame=roomId=>request('start_game','POST',{roomId});// The backend now gets the player ID from the session for submitHand\nexport const submitHand=(gameId,front,middle,back)=>{return request('submit_hand','POST',{gameId,front,middle,back});};","map":{"version":3,"names":["API_BASE_URL","request","endpoint","method","arguments","length","undefined","body","url","options","headers","credentials","JSON","stringify","response","fetch","text","parse","e","console","error","success","message","register","phone","password","login","logout","checkSession","findUser","transferPoints","recipientId","amount","matchmake","game_mode","getRoomState","roomId","playerId","startGame","submitHand","gameId","front","middle","back"],"sources":["/app/frontend/src/api.js"],"sourcesContent":["const API_BASE_URL = 'https://wenxiuxiu.eu.org/api';\n\n// We need to handle credentials (cookies) for session management\nasync function request(endpoint, method = 'GET', body = null) {\n    const url = `${API_BASE_URL}/api.php?endpoint=${endpoint}`;\n    const options = {\n        method,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include', // Important for sending session cookies\n    };\n    if (body) {\n        options.body = JSON.stringify(body);\n    }\n    try {\n        const response = await fetch(url, options);\n        // We can't always expect JSON, especially on errors.\n        const text = await response.text();\n        try {\n            return JSON.parse(text);\n        } catch (e) {\n            // If parsing fails, it might be a server error page.\n            console.error(\"Failed to parse JSON:\", text);\n            return { success: false, message: \"Server returned non-JSON response.\" };\n        }\n    } catch (error) {\n        console.error(`API request failed to endpoint: ${endpoint}`, error);\n        return { success: false, message: error.message };\n    }\n}\n\n// --- Auth Endpoints ---\nexport const register = (phone, password) => request('register', 'POST', { phone, password });\nexport const login = (phone, password) => request('login', 'POST', { phone, password });\nexport const logout = () => request('logout', 'POST');\nexport const checkSession = () => request('check_session');\nexport const findUser = (phone) => request(`find_user&phone=${phone}`);\nexport const transferPoints = (recipientId, amount) => request('transfer_points', 'POST', { recipientId, amount });\n\n\n// --- Game Endpoints ---\nexport const matchmake = (game_mode) => request('matchmake', 'POST', { game_mode });\nexport const getRoomState = (roomId, playerId) => request(`get_room_state&roomId=${roomId}&playerId=${playerId}`);\nexport const startGame = (roomId) => request('start_game', 'POST', { roomId });\n\n// The backend now gets the player ID from the session for submitHand\nexport const submitHand = (gameId, front, middle, back) => {\n    return request('submit_hand', 'POST', {\n        gameId,\n        front,\n        middle,\n        back\n    });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}