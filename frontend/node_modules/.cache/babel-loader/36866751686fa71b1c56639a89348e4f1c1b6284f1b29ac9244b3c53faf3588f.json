{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Card(_ref){let{filename,onClick,isSelected}=_ref;const recognizeCardValue=name=>{const[valueStr,,suitStr]=name.replace('.svg','').split('_');// Handle Jokers\nif(valueStr==='red')return'大王';if(valueStr==='black')return'小王';let value=valueStr.toUpperCase();// Map face cards and Ace\nif(value==='ACE')value='A';if(value==='KING')value='K';if(value==='QUEEN')value='Q';if(value==='JACK')value='J';let suit='';// Map suits\nif(suitStr==='spades')suit='♠';if(suitStr==='hearts')suit='♥';if(suitStr==='diamonds')suit='♦';if(suitStr==='clubs')suit='♣';return`${value}${suit}`;};const cardValue=recognizeCardValue(filename);// Optional: Add a visual representation of the card value on the card itself\n// This can be useful for debugging and testing\nconst displayValue=filename==='red_joker.svg'||filename==='black_joker.svg'?cardValue// For Jokers, display \"大王\" or \"小王\"\n:`${cardValue[0]}${cardValue[1]}`;// For numbered/face cards, display value and suit (e.g., \"A♠\", \"10♣\")\nreturn/*#__PURE__*/_jsxs(\"div\",{className:`card ${isSelected?'selected-card':''}`// Add 'selected-card' class if isSelected is true\n,onClick:onClick// Attach the onClick handler\n,children:[/*#__PURE__*/_jsx(\"img\",{src:`/cards/${filename}`,alt:cardValue}),/*#__PURE__*/_jsx(\"div\",{className:\"card-value-overlay\",children:displayValue})]});}export default Card;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Card","_ref","filename","onClick","isSelected","recognizeCardValue","name","valueStr","suitStr","replace","split","value","toUpperCase","suit","cardValue","displayValue","className","children","src","alt"],"sources":["/home/user/ss/frontend/src/components/Card.js"],"sourcesContent":["import React from 'react';\n\nfunction Card({ filename, onClick, isSelected }) {\n  const recognizeCardValue = (name) => {\n    const [valueStr, , suitStr] = name.replace('.svg', '').split('_');\n\n    // Handle Jokers\n    if (valueStr === 'red') return '大王';\n    if (valueStr === 'black') return '小王';\n\n    let value = valueStr.toUpperCase();\n    // Map face cards and Ace\n    if (value === 'ACE') value = 'A';\n    if (value === 'KING') value = 'K';\n    if (value === 'QUEEN') value = 'Q';\n    if (value === 'JACK') value = 'J';\n\n    let suit = '';\n    // Map suits\n    if (suitStr === 'spades') suit = '♠';\n    if (suitStr === 'hearts') suit = '♥';\n    if (suitStr === 'diamonds') suit = '♦';\n    if (suitStr === 'clubs') suit = '♣';\n\n    return `${value}${suit}`;\n  };\n\n  const cardValue = recognizeCardValue(filename);\n\n  // Optional: Add a visual representation of the card value on the card itself\n  // This can be useful for debugging and testing\n  const displayValue = filename === 'red_joker.svg' || filename === 'black_joker.svg'\n    ? cardValue // For Jokers, display \"大王\" or \"小王\"\n    : `${cardValue[0]}${cardValue[1]}`; // For numbered/face cards, display value and suit (e.g., \"A♠\", \"10♣\")\n\n  return (\n    <div\n      className={`card ${isSelected ? 'selected-card' : ''}`} // Add 'selected-card' class if isSelected is true\n      onClick={onClick} // Attach the onClick handler\n    >\n      <img src={`/cards/${filename}`} alt={cardValue} />\n      {/* Display recognized card value on the card */}\n      <div className=\"card-value-overlay\">\n        {displayValue}\n      </div>\n      {/* Optional: display the recognized card value */}\n      {/* <p>{cardValue}</p> */}\n    </div>\n  );\n}\n\nexport default Card;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,IAAIA,CAAAC,IAAA,CAAoC,IAAnC,CAAEC,QAAQ,CAAEC,OAAO,CAAEC,UAAW,CAAC,CAAAH,IAAA,CAC7C,KAAM,CAAAI,kBAAkB,CAAIC,IAAI,EAAK,CACnC,KAAM,CAACC,QAAQ,EAAIC,OAAO,CAAC,CAAGF,IAAI,CAACG,OAAO,CAAC,MAAM,CAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAEjE;AACA,GAAIH,QAAQ,GAAK,KAAK,CAAE,MAAO,IAAI,CACnC,GAAIA,QAAQ,GAAK,OAAO,CAAE,MAAO,IAAI,CAErC,GAAI,CAAAI,KAAK,CAAGJ,QAAQ,CAACK,WAAW,CAAC,CAAC,CAClC;AACA,GAAID,KAAK,GAAK,KAAK,CAAEA,KAAK,CAAG,GAAG,CAChC,GAAIA,KAAK,GAAK,MAAM,CAAEA,KAAK,CAAG,GAAG,CACjC,GAAIA,KAAK,GAAK,OAAO,CAAEA,KAAK,CAAG,GAAG,CAClC,GAAIA,KAAK,GAAK,MAAM,CAAEA,KAAK,CAAG,GAAG,CAEjC,GAAI,CAAAE,IAAI,CAAG,EAAE,CACb;AACA,GAAIL,OAAO,GAAK,QAAQ,CAAEK,IAAI,CAAG,GAAG,CACpC,GAAIL,OAAO,GAAK,QAAQ,CAAEK,IAAI,CAAG,GAAG,CACpC,GAAIL,OAAO,GAAK,UAAU,CAAEK,IAAI,CAAG,GAAG,CACtC,GAAIL,OAAO,GAAK,OAAO,CAAEK,IAAI,CAAG,GAAG,CAEnC,MAAO,GAAGF,KAAK,GAAGE,IAAI,EAAE,CAC1B,CAAC,CAED,KAAM,CAAAC,SAAS,CAAGT,kBAAkB,CAACH,QAAQ,CAAC,CAE9C;AACA;AACA,KAAM,CAAAa,YAAY,CAAGb,QAAQ,GAAK,eAAe,EAAIA,QAAQ,GAAK,iBAAiB,CAC/EY,SAAU;AAAA,CACV,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,EAAE,CAAE;AAEtC,mBACEf,KAAA,QACEiB,SAAS,CAAE,QAAQZ,UAAU,CAAG,eAAe,CAAG,EAAE,EAAI;AAAA,CACxDD,OAAO,CAAEA,OAAS;AAAA,CAAAc,QAAA,eAElBpB,IAAA,QAAKqB,GAAG,CAAE,UAAUhB,QAAQ,EAAG,CAACiB,GAAG,CAAEL,SAAU,CAAE,CAAC,cAElDjB,IAAA,QAAKmB,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAChCF,YAAY,CACV,CAAC,EAGH,CAAC,CAEV,CAEA,cAAe,CAAAf,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}