name: Android CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. 检出代码 (升级到 v4 以获得最新功能和性能)
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. 设置 Node.js 环境，并启用 npm 缓存 (升级到 v4, 增加 cache)
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'npm' # 启用 npm 缓存
        cache-dependency-path: 'frontend/package-lock.json' # 指向你的 lock 文件

    # 3. 设置 Java 环境，并启用 Gradle 缓存 (升级到 v4, 增加 cache)
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'gradle' # 启用 Gradle 缓存，极大地加速构建

    # 4. 安装前端依赖 (如果缓存命中，这步会非常快)
    - name: Install dependencies
      run: npm install
      working-directory: ./frontend

    # 5. 同步 Capacitor 项目
    - name: Sync Capacitor project
      run: npx cap sync android
      working-directory: ./frontend

    # 6. 授予 gradlew 执行权限
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      working-directory: ./frontend/android

    # 7. 构建 Android 项目 (如果缓存命中，依赖下载阶段会直接跳过)
    - name: Build Android project
      run: bash ./gradlew build
      working-directory: ./frontend/android
