# Workflow to build Android APK using Capacitor
name: Android Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: /home/runner/work/ss/ss/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies in frontend
        run: cd frontend && npm install

      - name: Remove existing Android directory
        run: cd frontend && rm -rf ../android

      - name: Install @capacitor/android and add platform
        run: cd frontend && npm install @capacitor/android && npx cap add android

      - name: Build React frontend
        run: cd frontend && CI=false NODE_OPTIONS=--openssl-legacy-provider npm run build

      - name: Sync Capacitor web assets to Android
        run: cd frontend && npx cap sync android

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Android Release APK
        run: cd frontend && ../android/gradlew assembleRelease -p ../android

      # Signing step would go here

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-unsigned
          path: /home/runner/work/ss/ss/android/app/build/outputs/apk/release/app-release-unsigned.apk
