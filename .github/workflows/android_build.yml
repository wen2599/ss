name: Android Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          ./frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: cd frontend && npm install

    - name: Build React Frontend
      run: cd frontend && CI=false NODE_OPTIONS=--openssl-legacy-provider npm run build

    - name: Sync Capacitor web assets to Android
      run: cd frontend && npx cap sync android

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build Android Release APK
      run: cd frontend && ./gradlew assembleRelease -p ../android

    # Uncomment and configure the signing step below if you want to build a signed APK
    # Requires KEYSTORE_FILE, KEYSTORE_PASSWORD, KEY_ALIAS, KEY_PASSWORD secrets configured in GitHub
    # - name: Sign Android APK
    #   run: |
    #     # Decode the base64 encoded keystore file
    #     echo ${{ secrets.KEYSTORE_FILE }} | base64 --decode > ../android/app/keystore.jks
    #     # Sign the APK
    #     cd android/app/build/outputs/apk/release/
    #     # You might need to adjust the path to apksigner depending on the environment
    #     # Example using Android SDK build-tools apksigner:
    #     # $ANDROID_HOME/build-tools/<version>/apksigner sign --ks keystore.jks --ks-pass env:KEYSTORE_PASSWORD --ks-key-alias ${{ secrets.KEY_ALIAS }} --key-pass env:KEY_PASSWORD app-release-unsigned.apk
    #     # Ensure you have the correct apksigner path and version
    #     # This is a placeholder command, replace with the actual apksigner command
    #     echo "Placeholder for signing command"
    #   env:
    #     KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
    #     KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

    - name: Upload generated APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release-unsigned
        # Adjust the path if you add signing and upload the signed APK
        path: android/app/build/outputs/apk/release/app-release-unsigned.apk