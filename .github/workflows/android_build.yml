# This is a basic workflow to help you get started with Actions

name: Build Android App

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-android:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Sets up Node.js environment
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x' # Use Node.js version 20 or higher

      # Caches npm dependencies
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Installs frontend dependencies
      - name: Install Frontend Dependencies
        run: cd frontend && npm install --legacy-peer-deps # Use legacy-peer-deps if needed

      # Removes existing Android platform
      - name: Remove existing Android platform
        run: rm -rf frontend/android # Corrected path

      # Adds Android platform and copies web assets
      - name: Add Android Platform and Sync
        run: cd frontend && npm install @capacitor/android && npx cap add android && npx cap sync android

      # Sets up Java environment (required for Android build)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # Builds the Android application
      - name: Build Android Release APK
        run: |
          cd frontend/android
          chmod +x ./gradlew
          ./gradlew assembleRelease

      # Uploads the generated APK artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-release-apk
          path: frontend/android/app/build/outputs/apk/release/app-release.apk