<?php\n\n/**\n * Calls the Google Gemini API with a given prompt.\n *\n * @param string $prompt The text prompt to send to Gemini.\n * @return string The text response from Gemini or an error message.\n */\nfunction call_gemini_api($prompt) {\n    $apiKey = getenv(\'GEMINI_API_KEY\');\n    if (empty($apiKey) || $apiKey === \'your_gemini_api_key_here\') {\n        return \'❌ **错误**: Gemini API 密钥未配置。请通过键盘更新密钥。 \';\n    }\n\n    // Using a recent, capable model. The v1beta endpoint is often used for the latest features.\n    $apiUrl = \"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key={\$apiKey}\";\n\n    $payload = [\n        \'contents\' => [\n            [\n                \'parts\' => [\n                    [\'text\' => $prompt]\n                ]\n            ]\n        ]\n    ];\n\n    $ch = curl_init($apiUrl);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($ch, CURLOPT_POST, true);\n    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($payload));\n    curl_setopt($ch, CURLOPT_HTTPHEADER, [\n        \'Content-Type: application/json\'\n    ]);\n    curl_setopt($ch, CURLOPT_TIMEOUT, 90); // Increased timeout for potentially long AI responses.\n\n    $response = curl_exec($ch);\n    $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n    $curl_error = curl_error($ch);\n    curl_close($ch);\n\n    if ($http_code !== 200) {\n        return \"❌ **API 请求失败**:\\n状态码: {$http_code}\\n响应: {$response}\\nCURL 错误: {$curl_error}\";\n    }\n\n    $responseData = json_decode($response, true);\n    if (json_last_error() !== JSON_ERROR_NONE) {\n        return \'❌ **错误**: 解析 Gemini API 的 JSON 响应失败。\';\n    }\n\n    // Extract the text content from the complex response structure.\n    $text_response = $responseData[\'candidates\'][0][\'content\'][\'parts\'][0][\'text\'] ?? null;\n\n    if (!$text_response) {\n        return \'❌ **错误**: 未在 Gemini API 输出中找到有效的文本响应。可能由于内容安全策略被拦截。\';\n    }\n\n    return $text_response;\n}\n\n?>\n